name: iOS Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
    
    - name: Select Xcode 15.0.1
      run: sudo xcode-select -s /Applications/Xcode_15.0.1.app/Contents/Developer
    
    - name: Disable Flutter analytics
      run: flutter config --no-analytics
    
    - name: Create iOS Firebase config
      run: |
        echo "${{ secrets.IOS_FIREBASE_CONFIG }}" | base64 --decode > ios/Runner/GoogleService-Info.plist
    
    - name: Update iOS deployment target
      run: |
        sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9]*\.[0-9]*/IPHONEOS_DEPLOYMENT_TARGET = 13.0/g' ios/Runner.xcodeproj/project.pbxproj
        if [ -f ios/Podfile ]; then
          sed -i '' "s/platform :ios, '[0-9]*\.[0-9]*'/platform :ios, '13.0'/g" ios/Podfile
        fi
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Generate code with build_runner
      run: dart run build_runner build --delete-conflicting-outputs
    
    - name: Build iOS for Simulator (Debug)
      run: |
        flutter build ios --simulator --debug
    
    - name: Build iOS for Device (Release)
      run: |
        flutter build ios --no-codesign --release
    
    - name: Test on iOS Simulator with Logs
      run: |
        # Lance le simulateur iPhone 15
        xcrun simctl boot "iPhone 15" || echo "Simulator already running"
        sleep 10
        
        # Installe l'app sur le simulateur
        xcrun simctl install booted build/ios/iphonesimulator/Runner.app
        
        # Lance les logs en arrière-plan
        xcrun simctl spawn booted log stream --predicate 'process == "Runner"' --info > simulator_logs.txt &
        LOG_PID=$!
        
        # Lance l'app
        xcrun simctl launch booted com.thomassamp.prescriptionManager
        
        # Attendre 30 secondes pour capturer les logs
        sleep 30
        
        # Arrêter la capture de logs
        kill $LOG_PID || true
        
        # Afficher les logs
        echo "=== SIMULATOR LOGS ==="
        cat simulator_logs.txt
    
    - name: Create unsigned IPA
      run: |
        cd build/ios/iphoneos
        mkdir -p Payload
        cp -r Runner.app Payload/
        zip -r app-unsigned.ipa Payload/
    
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-app-unsigned
        path: build/ios/iphoneos/app-unsigned.ipa
    
    - name: Upload Simulator Logs
      uses: actions/upload-artifact@v4
      with:
        name: ios-simulator-logs
        path: simulator_logs.txt